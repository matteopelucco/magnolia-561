<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.pelucco</groupId>
		<artifactId>magnolia-demo</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>magnolia-demo-webapp</artifactId>
	<name>magnolia-demo: webapp</name>
	<packaging>war</packaging>
	<dependencies>
		<!-- Add your project specific dependencies here: -->

		<!-- Overlay Magnolia Empty Webapp. Alternatively, use the bundled-webapp 
			or the enterprise-webapp. Dependencies versions are already imported by parent, 
			so no need to replicate here. -->
		<!-- <dependency> <groupId>info.magnolia</groupId> <artifactId>magnolia-empty-webapp</artifactId> 
			<type>pom</type> </dependency> <dependency> <groupId>info.magnolia</groupId> 
			<artifactId>magnolia-empty-webapp</artifactId> <type>war</type> </dependency> -->

		<!-- FULL Magnolia Community -->
		<dependency>
			<groupId>info.magnolia.bundle</groupId>
			<artifactId>magnolia-community-demo-bundle</artifactId>
			<version>${magnoliaVersion}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>info.magnolia.bundle</groupId>
			<artifactId>magnolia-community-demo-webapp</artifactId>
			<version>${magnoliaVersion}</version>
			<type>war</type>
		</dependency>

		<!-- FIX the same old story, image module.. -->
		<dependency>
			<groupId>info.magnolia.imaging</groupId>
			<artifactId>magnolia-imaging</artifactId>
			<version>3.4</version>
		</dependency>

		<!-- PROJECT dependencies -->
		<dependency>
			<groupId>com.pelucco.magnolia.module</groupId>
			<artifactId>magnolia-demo-module</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- exclude jars copied "physically" from the webapp overlay - so we 
						only get those resolved by Maven's dependency management -->
					<dependentWarExcludes>WEB-INF/lib/*.jar</dependentWarExcludes>
					<failOnMissingWebXml>false</failOnMissingWebXml><!-- FIX Eclipse behaviour -->
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
